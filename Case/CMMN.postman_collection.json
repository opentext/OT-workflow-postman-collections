{
	"info": {
		"_postman_id": "e2c5b6e4-ce25-4287-b4ed-af0ee52e89b0",
		"name": "CMMN Golden copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "#0 Get authentication token",
			"item": [
				{
					"name": "OTDS Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"otdsaccesstoken\", jsonData.access_token);\r",
									"postman.setEnvironmentVariable(\"token\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{app_confclient_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{app_confclient_id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{app_confclient_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{app_confclient_secret}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{user_name}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "readwrite",
									"type": "text"
								},
								{
									"key": "client_data",
									"value": "subName={{subscriptionName}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{otdshost}}/otdstenant/{{tenant_id}}/oauth2/token",
							"protocol": "https",
							"host": [
								"{{otdshost}}"
							],
							"path": [
								"otdstenant",
								"{{tenant_id}}",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "#1 Deploy a case",
			"item": [
				{
					"name": "Create a new executable case model",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=JSON.parse(responseBody);\r",
									"\r",
									"pm.environment.set(\"caseDefinitionId\", jsonData.caseDefinitionId);\r",
									"\r",
									"pm.environment.set(\"caseKey\",jsonData.key);\r",
									"\r",
									"pm.environment.set(\"parentDeploymentId\",jsonData.parentDeploymentId);\r",
									"\r",
									"pm.environment.set(\"tenantId\",jsonData.tenantId);\r",
									"\r",
									"pm.environment.set(\"subscriptionId\",jsonData.subscriptionId);\r",
									"\r",
									"pm.environment.set(\"name\",jsonData.name);\r",
									"\r",
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"modelType\": \"xml\",\r\n    \"modelContent\" : \"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/workflow/v1/case/runtime/models",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflow",
								"v1",
								"case",
								"runtime",
								"models"
							]
						}
					},
					"response": []
				},
				{
					"name": "Case model conversion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Model type is json\", function () {\r",
									"  pm.expect(pm.response.json().modelType).to.include(\"json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"modelType\": \"xml\",\r\n    \"modelContent\" : \"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/workflow/v1/case/models/conversion",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflow",
								"v1",
								"case",
								"models",
								"conversion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get executable case models",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=JSON.parse(responseBody);\r",
									"\r",
									"pm.environment.set(\"caseDefinitionId\", jsonData._embedded.caseModels[1].id);\r",
									"\r",
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{otdsaccesstoken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{host}}/workflow/v1/case/runtime/models",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflow",
								"v1",
								"case",
								"runtime",
								"models"
							],
							"query": [
								{
									"key": "latestVersion",
									"value": "true",
									"disabled": true
								},
								{
									"key": "name",
									"value": "casemodelwithtasks",
									"disabled": true
								},
								{
									"key": "version",
									"value": "8",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a runtime model",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{otdsaccesstoken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{host}}/workflow/v1/case/runtime/models/{{caseDefinitionId}}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflow",
								"v1",
								"case",
								"runtime",
								"models",
								"{{caseDefinitionId}}"
							],
							"query": [
								{
									"key": "name",
									"value": "casemodelwithtasks",
									"disabled": true
								},
								{
									"key": "cascade",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "#2 Start a case",
			"item": [
				{
					"name": "Create a case instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"caseInstanceId\", jsonData.id);\r",
									"\r",
									"pm.environment.set(\"tenantId\", jsonData.tenantId);\r",
									"\r",
									"pm.environment.set(\"subscriptionId\", jsonData.subscriptionId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"caseDefinitionKey\": \"{{caseKey}}\",\r\n    \"variables\": [\r\n        {\r\n            \"name\": \"candidate\",\r\n            \"value\": {{candidateEmail}}\r\n        },\r\n        {\r\n            \"name\": \"hr\",\r\n            \"value\": {{hrEmail}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/workflow/v1/case/case-instances",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflow",
								"v1",
								"case",
								"case-instances"
							],
							"query": [
								{
									"key": "tenantId",
									"value": "da1bda1e-b21e-452a-b73f-cd7f9e5a2e60",
									"disabled": true
								},
								{
									"key": "subscriptionId",
									"value": "9b4c9575-e116-47df-8b7b-7948a1639803",
									"disabled": true
								},
								{
									"key": "caseDefinitionName",
									"value": "CaseOwnerModel",
									"disabled": true
								},
								{
									"key": "caseInstanceId",
									"value": "d62b17ea-1cec-11eb-a66d-eeee0affdd95",
									"disabled": true
								},
								{
									"key": "tenantId",
									"value": "507eedbc-d89c-4163-8557-0fa884316197",
									"disabled": true
								},
								{
									"key": "subscriptionId",
									"value": "e9fa0738-937b-42a9-a33f-e55cf81e94bb",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get case instances",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"check if tenantId is same\", function () {\r",
									"    pm.expect(jsonData._embedded['case-instances'][0].tenantId).to.equal(pm.environment.get('tenantId'));\r",
									"});\r",
									"\r",
									"pm.test(\"check if subscriptionId is same\", function () {\r",
									"    pm.expect(jsonData._embedded['case-instances'][0].subscriptionId).to.equal(pm.environment.get('subscriptionId'));\r",
									"});\r",
									"\r",
									"pm.test(\"check if case instance id is same\", function () {\r",
									"    pm.expect(jsonData._embedded['case-instances'][0].id).to.equal(pm.environment.get('caseInstanceId'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{otdsaccesstoken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{host}}/workflow/v1/case/case-instances?id={{caseInstanceId}}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflow",
								"v1",
								"case",
								"case-instances"
							],
							"query": [
								{
									"key": "id",
									"value": "{{caseInstanceId}}"
								},
								{
									"key": "includeComments",
									"value": "true",
									"disabled": true
								},
								{
									"key": "caseInstanceId",
									"value": "{{caseInstanceId}}",
									"disabled": true
								},
								{
									"key": "includeCaseVariables",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get diagram for a case instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{otdsaccesstoken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{host}}/workflow/v1/case/case-instances/{{caseInstanceId}}/diagram",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflow",
								"v1",
								"case",
								"case-instances",
								"{{caseInstanceId}}",
								"diagram"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Stage Overview",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{otdsaccesstoken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{host}}/workflow/v1/case/case-instances/{{caseInstanceId}}/stage-overview",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflow",
								"v1",
								"case",
								"case-instances",
								"{{caseInstanceId}}",
								"stage-overview"
							]
						}
					},
					"response": []
				},
				{
					"name": "get case instance variable",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{host}}/workflow/v1/case/case-instances/{{caseInstanceId}}/variables",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflow",
								"v1",
								"case",
								"case-instances",
								"{{caseInstanceId}}",
								"variables"
							]
						}
					},
					"response": []
				},
				{
					"name": "create case variable",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"name\": \"hiring supervisor\",\r\n        \"value\": {{supervisorEmail}},\r\n        \"audit\" : true\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/workflow/v1/case/case-instances/{{caseInstanceId}}/variables",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflow",
								"v1",
								"case",
								"case-instances",
								"{{caseInstanceId}}",
								"variables"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "#3 Working with tasks",
			"item": [
				{
					"name": "Get Case tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var res = jsonData._embedded['case-tasks'];\r",
									"\r",
									"pm.environment.set(\"taskId\", jsonData._embedded['case-tasks'][3].id);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{otdsaccesstoken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{host}}/workflow/v1/case/tasks?caseInstanceId={{caseInstanceId}}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflow",
								"v1",
								"case",
								"tasks"
							],
							"query": [
								{
									"key": "dueDateAfter",
									"value": "2020-12-19T17:00:58.825Z",
									"disabled": true
								},
								{
									"key": "count",
									"value": "100",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "0",
									"disabled": true
								},
								{
									"key": "showAuthorizedTasksForCurrentUser",
									"value": "true",
									"disabled": true
								},
								{
									"key": "includeTaskComments",
									"value": "true",
									"disabled": true
								},
								{
									"key": "caseInstanceId",
									"value": "{{caseInstanceId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Specific task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{otdsaccesstoken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{host}}/workflow/v1/case/tasks/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflow",
								"v1",
								"case",
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create case task variable",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{otdsaccesstoken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"name\": \"DateTimeVariable\",\r\n        \"type\": \"date\",\r\n        \"value\": \"2016-01-28T23:00:00Z\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/workflow/v1/case/tasks/{{taskId}}/variables",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflow",
								"v1",
								"case",
								"tasks",
								"{{taskId}}",
								"variables"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get case task variables",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{otdsaccesstoken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{host}}/workflow/v1/case/tasks/{{taskId}}/variables",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflow",
								"v1",
								"case",
								"tasks",
								"{{taskId}}",
								"variables"
							],
							"query": [
								{
									"key": "count",
									"value": "20",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update case task variable",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{otdsaccesstoken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n   {\r\n      \"dueDate\" : \"2020-04-17T04:50:27.862Z\"\r\n   }\r\n                \r\n            ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/workflow/v1/case/tasks/{{taskId}}/variables/DateTimeVariable",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflow",
								"v1",
								"case",
								"tasks",
								"{{taskId}}",
								"variables",
								"DateTimeVariable"
							]
						}
					},
					"response": []
				},
				{
					"name": "Claim a task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{otdsaccesstoken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"action\": \"claim\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/workflow/v1/case/tasks/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflow",
								"v1",
								"case",
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Act on a task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{otdsaccesstoken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"action\": \"complete\",\r\n    \"variables\": [\r\n        {\r\n            \"audit\": true,\r\n            \"name\": \"Status\",\r\n            \"type\": \"string\",\r\n            \"value\": \"Done\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/workflow/v1/case/tasks/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflow",
								"v1",
								"case",
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "#4 Case Plan Item Instance",
			"item": [
				{
					"name": "Get Plan Item Instances List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{otdsaccesstoken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{host}}/workflow/v1/case/plan-item-instances?caseInstanceId={{caseInstanceId}}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflow",
								"v1",
								"case",
								"plan-item-instances"
							],
							"query": [
								{
									"key": "planItemDefinitionType",
									"value": "",
									"disabled": true
								},
								{
									"key": "caseInstanceId",
									"value": "{{caseInstanceId}}"
								},
								{
									"key": "lastEnabledTime",
									"value": "null1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a specific plan item instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{otdsaccesstoken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{host}}/workflow/v1/case/plan-item-instances?caseInstanceId={{caseInstanceId}}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflow",
								"v1",
								"case",
								"plan-item-instances"
							],
							"query": [
								{
									"key": "caseInstanceId",
									"value": "{{caseInstanceId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "#5 Case history",
			"item": [
				{
					"name": "Get a historic case instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{historyHost}}/workflow-history/v1/case/historic-case-instances?includeCaseVariables=true&caseInstanceId={{caseInstanceId}}",
							"protocol": "https",
							"host": [
								"{{historyHost}}"
							],
							"path": [
								"workflow-history",
								"v1",
								"case",
								"historic-case-instances"
							],
							"query": [
								{
									"key": "caseAssignee",
									"value": "null",
									"disabled": true
								},
								{
									"key": "caseAssignee",
									"value": "",
									"disabled": true
								},
								{
									"key": "fetchOnlyCaseAssigneeTasks",
									"value": "true",
									"disabled": true
								},
								{
									"key": "taskName",
									"value": "subTask101",
									"disabled": true
								},
								{
									"key": "excludeSubTasks",
									"value": "true",
									"disabled": true
								},
								{
									"key": "includeCaseVariables",
									"value": "true"
								},
								{
									"key": "caseInstanceId",
									"value": "{{caseInstanceId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a historic case instance stages with tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{historyHost}}/workflow-history/v1/case/historic-case-instances/{{caseInstanceId}}/stages?includeStageInstancesAndTasks=true&showAuthorizedTasksForCurrentUser=true",
							"protocol": "https",
							"host": [
								"{{historyHost}}"
							],
							"path": [
								"workflow-history",
								"v1",
								"case",
								"historic-case-instances",
								"{{caseInstanceId}}",
								"stages"
							],
							"query": [
								{
									"key": "includeStageInstancesAndTasks",
									"value": "true"
								},
								{
									"key": "taskId",
									"value": "f87067dd-c3e4-11ee-99fe-eeee0aff1df3",
									"disabled": true
								},
								{
									"key": "taskDefinitionKey",
									"value": "sid-7C9266BB-74DA-4A40-857C-3C3488487F28",
									"disabled": true
								},
								{
									"key": "taskName",
									"value": "htask1",
									"disabled": true
								},
								{
									"key": "taskAssignee",
									"value": "{{candidateEmail}}",
									"disabled": true
								},
								{
									"key": "taskCompletedOn",
									"value": "2024-02-05T05:44:54.667+00:00",
									"disabled": true
								},
								{
									"key": "taskCompletedAfter",
									"value": "2024-02-05T05:44:54.667+00:00",
									"disabled": true
								},
								{
									"key": "taskCompletedBefore",
									"value": "2024-02-05T05:44:54.667+00:00",
									"disabled": true
								},
								{
									"key": "taskCreatedOn",
									"value": "2024-02-05T05:11:08.314+00:00",
									"disabled": true
								},
								{
									"key": "taskCreatedBefore",
									"value": "2024-02-06T05:11:10.314+00:00",
									"disabled": true
								},
								{
									"key": "taskCreatedAfter",
									"value": "2024-02-04T05:11:08.314+00:00",
									"disabled": true
								},
								{
									"key": "includeCaseAssigneeTasks",
									"value": "true",
									"disabled": true
								},
								{
									"key": "fetchOnlyCaseAssigneeTasks",
									"value": "true",
									"disabled": true
								},
								{
									"key": "taskOwner",
									"value": "{{candidateEmail}}",
									"disabled": true
								},
								{
									"key": "taskInvolvedUser",
									"value": "username",
									"disabled": true
								},
								{
									"key": "parentTaskId",
									"value": "f87067dd-c3e4-11ee-99fe-eeee0aff1df3",
									"disabled": true
								},
								{
									"key": "taskCreatedBefore",
									"value": "2024-02-05T05:11:08.314+00:00",
									"disabled": true
								},
								{
									"key": "taskCreatedAfter",
									"value": "2024-02-04T05:11:08.314+00:00",
									"disabled": true
								},
								{
									"key": "fetchOnlyCaseAssigneeTasks",
									"value": "true",
									"disabled": true
								},
								{
									"key": "showAuthorizedTasksForCurrentUser",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "#6 Case Audit logs",
			"item": [
				{
					"name": "case Instance Auditlogs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableCookies": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"url": {
							"raw": "https://{{historyHost}}/workflow-history/v1/case/case-instances/audit-logs?includeProcessVariables=true&caseInstanceId={{caseInstanceId}}",
							"protocol": "https",
							"host": [
								"{{historyHost}}"
							],
							"path": [
								"workflow-history",
								"v1",
								"case",
								"case-instances",
								"audit-logs"
							],
							"query": [
								{
									"key": "sort",
									"value": "startTime",
									"disabled": true
								},
								{
									"key": "order",
									"value": "desc",
									"disabled": true
								},
								{
									"key": "count",
									"value": "5",
									"disabled": true
								},
								{
									"key": "includeProcessVariables",
									"value": "true"
								},
								{
									"key": "id",
									"value": "6ca98e3f-2788-11ed-938e-eeee0aff5eda",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "dueDate",
									"disabled": true
								},
								{
									"key": "sortEmptyValuesOnTop",
									"value": "true",
									"disabled": true
								},
								{
									"key": "processDefinitionId",
									"value": "leaveManagementProcess:42:7fde23b8-4854-11ec-8403-eeee0aff0e29",
									"disabled": true
								},
								{
									"key": "triggerType",
									"value": "manual",
									"disabled": true
								},
								{
									"key": "processDefinitionName",
									"value": "timer1",
									"disabled": true
								},
								{
									"key": "processDefinitionKey",
									"value": "{{processDefinitionKey}}",
									"disabled": true
								},
								{
									"key": "id",
									"value": "30717bf9-24a9-11ed-b9c2-eeee0aff1364",
									"disabled": true
								},
								{
									"key": "tenantId",
									"value": "abc",
									"disabled": true
								},
								{
									"key": "caseInstanceId",
									"value": "{{caseInstanceId}}"
								},
								{
									"key": "includeTaskEvents",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "taskInstance Auditlogs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableCookies": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{historyHost}}/workflow-history/v1/case/task-instances/audit-logs",
							"protocol": "https",
							"host": [
								"{{historyHost}}"
							],
							"path": [
								"workflow-history",
								"v1",
								"case",
								"task-instances",
								"audit-logs"
							],
							"query": [
								{
									"key": "count",
									"value": "5",
									"disabled": true
								},
								{
									"key": "includeProcessVariables",
									"value": "true",
									"disabled": true
								},
								{
									"key": "id",
									"value": "6ca98e3f-2788-11ed-938e-eeee0aff5eda",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "dueDate",
									"disabled": true
								},
								{
									"key": "sortEmptyValuesOnTop",
									"value": "true",
									"disabled": true
								},
								{
									"key": "processDefinitionId",
									"value": "leaveManagementProcess:42:7fde23b8-4854-11ec-8403-eeee0aff0e29",
									"disabled": true
								},
								{
									"key": "triggerType",
									"value": "manual",
									"disabled": true
								},
								{
									"key": "processDefinitionName",
									"value": "timer1",
									"disabled": true
								},
								{
									"key": "id",
									"value": "30717bf9-24a9-11ed-b9c2-eeee0aff1364",
									"disabled": true
								},
								{
									"key": "tenantId",
									"value": "abc",
									"disabled": true
								},
								{
									"key": "processInstanceId",
									"value": "{{processInstanceId}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Plan Item Auditlogs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableCookies": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{historyHost}}/workflow-history/v1/case/plan-item-instances/audit-logs",
							"protocol": "https",
							"host": [
								"{{historyHost}}"
							],
							"path": [
								"workflow-history",
								"v1",
								"case",
								"plan-item-instances",
								"audit-logs"
							],
							"query": [
								{
									"key": "count",
									"value": "5",
									"disabled": true
								},
								{
									"key": "includeProcessVariables",
									"value": "true",
									"disabled": true
								},
								{
									"key": "id",
									"value": "6ca98e3f-2788-11ed-938e-eeee0aff5eda",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "dueDate",
									"disabled": true
								},
								{
									"key": "sortEmptyValuesOnTop",
									"value": "true",
									"disabled": true
								},
								{
									"key": "processDefinitionId",
									"value": "leaveManagementProcess:42:7fde23b8-4854-11ec-8403-eeee0aff0e29",
									"disabled": true
								},
								{
									"key": "triggerType",
									"value": "manual",
									"disabled": true
								},
								{
									"key": "processDefinitionName",
									"value": "timer1",
									"disabled": true
								},
								{
									"key": "id",
									"value": "30717bf9-24a9-11ed-b9c2-eeee0aff1364",
									"disabled": true
								},
								{
									"key": "tenantId",
									"value": "abc",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}