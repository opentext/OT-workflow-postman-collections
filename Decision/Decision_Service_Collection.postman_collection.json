{
	"info": {
		"_postman_id": "2229ae63-4000-4446-a46a-f6c4b3e4a26b",
		"name": "Decision Service Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19084338"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "get tenant access token with client credentials grant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (responseBody.has(\"access_token\")) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"tenant_access_token\", jsonData.access_token);",
									"    console.log(postman.getEnvironmentVariable(\"tenant_access_token\"));",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableCookies": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{app_confclient_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{app_confclient_id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api_host}}/tenants/{{tenant_id}}/oauth2/token",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"tenants",
								"{{tenant_id}}",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Decision Models",
			"item": [
				{
					"name": "deploy a first hit policy decision model",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=JSON.parse(responseBody);\r",
									"pm.environment.set(\"firstHit_modelKey\", jsonData.key);\r",
									"pm.environment.set(\"modelId\",jsonData.id);\r",
									"\r",
									"pm.globals.set(\"id\", \"{{subscription-id}}\");\r",
									"\r",
									"pm.test(\"Status code is \" + pm.response.code +\" and decisionKey is \"+ jsonData.key, function () {\r",
									"\r",
									"  pm.response.to.have.status(201);\r",
									"\r",
									"  pm.expect(jsonData.key).to.eql(pm.variables.get(\"model-key\"));\r",
									"  });\r",
									"\r",
									" pm.test(\"Status code is \" + pm.response.status,function(){\r",
									"  pm.response.to.have.status(\"Created\")\r",
									"  });\r",
									"\r",
									"\r",
									"  pm.test(\"Model name is \"+ jsonData.name,function(){\r",
									"      pm.expect(jsonData.name).to.eql(pm.variables.get(\"model-name\"));\r",
									"  });\r",
									"\r",
									"  pm.test(\"DeploymentSpace is \"+ jsonData.deploymentSpace,function(){\r",
									"      pm.expect(jsonData.deploymentSpace).to.eql(pm.variables.get(\"deploymentSpace\"));\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"modelType\": \"xml\",\n    \"modelContent\":\"PGRlZmluaXRpb25zIHhtbG5zPSJodHRwczovL3d3dy5vbWcub3JnL3NwZWMvRE1OLzIwMTkxMTExL01PREVMLyIgeG1sbnM6ZG1uZGk9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvc3BlYy9ETU4vMjAxOTExMTEvRE1OREkvIiB4bWxuczpkYz0iaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvRE1OLzIwMTgwNTIxL0RDLyIgeG1sbnM6ZGk9Imh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RNTi8yMDE4MDUyMS9ESS8iIGlkPSJkZWZpbml0aW9uXyIgbmFtZT0iRHluYW1pY2NvbnRyYWN0YXBwcm92YWwtZmlyc3RoaXQiIG5hbWVzcGFjZT0idGFyZ2V0bmFtZXNwYWNlMSIgZXhwb3J0ZXI9IkZsb3dhYmxlIE9wZW4gU291cmNlIE1vZGVsZXIiIGV4cG9ydGVyVmVyc2lvbj0iNi43LjIiPgogIDxkZWNpc2lvbiBpZD0iQ29udHJhY3RfYXBwcm92YWwiIG5hbWU9IkR5bmFtaWNjb250cmFjdGFwcHJvdmFsLWZpcnN0aGl0IiB4bWxuczpkbT0iaHR0cHM6Ly9kZWNpc2lvbm1vZGVsLm9wZW50ZXh0LmNvbSIgZG06Y2F0ZWdvcnk9IkNhdGVnb3J5MSIgZG06bmFtZXNwYWNlPSJ0YXJnZXRuYW1lc3BhY2UxIj4KICAgIDxkZWNpc2lvblRhYmxlIGlkPSJkZWNpc2lvblRhYmxlX2E4MzQ2NWZiLTFiMjYtNDE0OC05MGE4LWFkYzMxYjk4ZDIzMiIgaGl0UG9saWN5PSJGSVJTVCI+CiAgICAgIDxpbnB1dCBsYWJlbD0iQ29udHJhY3QgQ2F0ZWdvcnkiPgogICAgICAgIDxpbnB1dEV4cHJlc3Npb24gaWQ9ImlucHV0RXhwcmVzc2lvbl81MDE2OWZlOC05OTM4LTQzNjEtODNjYy1jMDI2NDIxZDkxOTQiIHR5cGVSZWY9InN0cmluZyI+CiAgICAgICAgICA8dGV4dD5Db250cmFjdF9DYXRlZ29yeTwvdGV4dD4KICAgICAgICA8L2lucHV0RXhwcmVzc2lvbj4KICAgICAgPC9pbnB1dD4KICAgICAgPGlucHV0IGxhYmVsPSJDb250cmFjdCBWYWx1ZSI+CiAgICAgICAgPGlucHV0RXhwcmVzc2lvbiBpZD0iaW5wdXRFeHByZXNzaW9uXzVjMjVhZDQ0LWE1M2MtNDdkYy1iMDA5LTNlZGFmYTZhZGE3YSIgdHlwZVJlZj0ibnVtYmVyIj4KICAgICAgICAgIDx0ZXh0PkNvbnRyYWN0X1ZhbHVlPC90ZXh0PgogICAgICAgIDwvaW5wdXRFeHByZXNzaW9uPgogICAgICA8L2lucHV0PgogICAgICA8b3V0cHV0IGlkPSJvdXRwdXRFeHByZXNzaW9uX2MzYmMyMWZiLTkyMjQtNGU2Ny1hYjNkLWEyZjRlYTU3NWRhMiIgbGFiZWw9IkNvbnRyYWN0IEFwcHJvdmVyIiBuYW1lPSJDb250cmFjdF9BcHByb3ZlciIgdHlwZVJlZj0ic3RyaW5nIj48L291dHB1dD4KICAgICAgPHJ1bGU+CiAgICAgICAgPGlucHV0RW50cnkgaWQ9ImlucHV0RW50cnlfNTAxNjlmZTgtOTkzOC00MzYxLTgzY2MtYzAyNjQyMWQ5MTk0XzEiPgogICAgICAgICAgPHRleHQ+PCFbQ0RBVEFbPT0gIkFjYWRlbXkiXV0+PC90ZXh0PgogICAgICAgIDwvaW5wdXRFbnRyeT4KICAgICAgICA8aW5wdXRFbnRyeSBpZD0iaW5wdXRFbnRyeV81YzI1YWQ0NC1hNTNjLTQ3ZGMtYjAwOS0zZWRhZmE2YWRhN2FfMSI+CiAgICAgICAgICA8dGV4dD48IVtDREFUQVs+PSAyNTAwMF1dPjwvdGV4dD4KICAgICAgICA8L2lucHV0RW50cnk+CiAgICAgICAgPG91dHB1dEVudHJ5IGlkPSJvdXRwdXRFbnRyeV9jM2JjMjFmYi05MjI0LTRlNjctYWIzZC1hMmY0ZWE1NzVkYTJfMSI+CiAgICAgICAgICA8dGV4dD48IVtDREFUQVsiSm9obiBEb2UiXV0+PC90ZXh0PgogICAgICAgIDwvb3V0cHV0RW50cnk+CiAgICAgIDwvcnVsZT4KICAgICAgPHJ1bGU+CiAgICAgICAgPGlucHV0RW50cnkgaWQ9ImlucHV0RW50cnlfNTAxNjlmZTgtOTkzOC00MzYxLTgzY2MtYzAyNjQyMWQ5MTk0XzIiPgogICAgICAgICAgPHRleHQ+PCFbQ0RBVEFbPT0gIkFjYWRlbXkiXV0+PC90ZXh0PgogICAgICAgIDwvaW5wdXRFbnRyeT4KICAgICAgICA8aW5wdXRFbnRyeSBpZD0iaW5wdXRFbnRyeV81YzI1YWQ0NC1hNTNjLTQ3ZGMtYjAwOS0zZWRhZmE2YWRhN2FfMiI+CiAgICAgICAgICA8dGV4dD48IVtDREFUQVs9PSAxMDAwMF1dPjwvdGV4dD4KICAgICAgICA8L2lucHV0RW50cnk+CiAgICAgICAgPG91dHB1dEVudHJ5IGlkPSJvdXRwdXRFbnRyeV9jM2JjMjFmYi05MjI0LTRlNjctYWIzZC1hMmY0ZWE1NzVkYTJfMiI+CiAgICAgICAgICA8dGV4dD48IVtDREFUQVsiS3Jpc3RlbiBGaXNoZXIiXV0+PC90ZXh0PgogICAgICAgIDwvb3V0cHV0RW50cnk+CiAgICAgIDwvcnVsZT4KICAgICAgPHJ1bGU+CiAgICAgICAgPGlucHV0RW50cnkgaWQ9ImlucHV0RW50cnlfNTAxNjlmZTgtOTkzOC00MzYxLTgzY2MtYzAyNjQyMWQ5MTk0XzMiPgogICAgICAgICAgPHRleHQ+PCFbQ0RBVEFbPT0gIkhlYWx0aCJdXT48L3RleHQ+CiAgICAgICAgPC9pbnB1dEVudHJ5PgogICAgICAgIDxpbnB1dEVudHJ5IGlkPSJpbnB1dEVudHJ5XzVjMjVhZDQ0LWE1M2MtNDdkYy1iMDA5LTNlZGFmYTZhZGE3YV8zIj4KICAgICAgICAgIDx0ZXh0PjwhW0NEQVRBWzwgMTAwMDBdXT48L3RleHQ+CiAgICAgICAgPC9pbnB1dEVudHJ5PgogICAgICAgIDxvdXRwdXRFbnRyeSBpZD0ib3V0cHV0RW50cnlfYzNiYzIxZmItOTIyNC00ZTY3LWFiM2QtYTJmNGVhNTc1ZGEyXzMiPgogICAgICAgICAgPHRleHQ+PCFbQ0RBVEFbIkthdGUgTWlsbGVyIl1dPjwvdGV4dD4KICAgICAgICA8L291dHB1dEVudHJ5PgogICAgICA8L3J1bGU+CiAgICAgIDxydWxlPgogICAgICAgIDxpbnB1dEVudHJ5IGlkPSJpbnB1dEVudHJ5XzUwMTY5ZmU4LTk5MzgtNDM2MS04M2NjLWMwMjY0MjFkOTE5NF80Ij4KICAgICAgICAgIDx0ZXh0PjwhW0NEQVRBWz09ICJIZWFsdGgiXV0+PC90ZXh0PgogICAgICAgIDwvaW5wdXRFbnRyeT4KICAgICAgICA8aW5wdXRFbnRyeSBpZD0iaW5wdXRFbnRyeV81YzI1YWQ0NC1hNTNjLTQ3ZGMtYjAwOS0zZWRhZmE2YWRhN2FfNCI+CiAgICAgICAgICA8dGV4dD48IVtDREFUQVs8PSAxNTAwMF1dPjwvdGV4dD4KICAgICAgICA8L2lucHV0RW50cnk+CiAgICAgICAgPG91dHB1dEVudHJ5IGlkPSJvdXRwdXRFbnRyeV9jM2JjMjFmYi05MjI0LTRlNjctYWIzZC1hMmY0ZWE1NzVkYTJfNCI+CiAgICAgICAgICA8dGV4dD48IVtDREFUQVsiVG9tIFBlcmV6LCBLcmlzdGVuIEZpc2hlciJdXT48L3RleHQ+CiAgICAgICAgPC9vdXRwdXRFbnRyeT4KICAgICAgPC9ydWxlPgogICAgICA8cnVsZT4KICAgICAgICA8aW5wdXRFbnRyeSBpZD0iaW5wdXRFbnRyeV81MDE2OWZlOC05OTM4LTQzNjEtODNjYy1jMDI2NDIxZDkxOTRfNSI+CiAgICAgICAgICA8dGV4dD48IVtDREFUQVs9PSAiSGVhbHRoIl1dPjwvdGV4dD4KICAgICAgICA8L2lucHV0RW50cnk+CiAgICAgICAgPGlucHV0RW50cnkgaWQ9ImlucHV0RW50cnlfNWMyNWFkNDQtYTUzYy00N2RjLWIwMDktM2VkYWZhNmFkYTdhXzUiPgogICAgICAgICAgPHRleHQ+PCFbQ0RBVEFbPj0gMjUwMDBdXT48L3RleHQ+CiAgICAgICAgPC9pbnB1dEVudHJ5PgogICAgICAgIDxvdXRwdXRFbnRyeSBpZD0ib3V0cHV0RW50cnlfYzNiYzIxZmItOTIyNC00ZTY3LWFiM2QtYTJmNGVhNTc1ZGEyXzUiPgogICAgICAgICAgPHRleHQ+PCFbQ0RBVEFbIkZpbmFuY2UgVGVhbSJdXT48L3RleHQ+CiAgICAgICAgPC9vdXRwdXRFbnRyeT4KICAgICAgPC9ydWxlPgogICAgICA8cnVsZT4KICAgICAgICA8aW5wdXRFbnRyeSBpZD0iaW5wdXRFbnRyeV81MDE2OWZlOC05OTM4LTQzNjEtODNjYy1jMDI2NDIxZDkxOTRfNiI+CiAgICAgICAgICA8dGV4dD48IVtDREFUQVs9PSAiSW5zdXJhbmNlIl1dPjwvdGV4dD4KICAgICAgICA8L2lucHV0RW50cnk+CiAgICAgICAgPGlucHV0RW50cnkgaWQ9ImlucHV0RW50cnlfNWMyNWFkNDQtYTUzYy00N2RjLWIwMDktM2VkYWZhNmFkYTdhXzYiPgogICAgICAgICAgPHRleHQ+PCFbQ0RBVEFbPiAxMDAwMF1dPjwvdGV4dD4KICAgICAgICA8L2lucHV0RW50cnk+CiAgICAgICAgPG91dHB1dEVudHJ5IGlkPSJvdXRwdXRFbnRyeV9jM2JjMjFmYi05MjI0LTRlNjctYWIzZC1hMmY0ZWE1NzVkYTJfNiI+CiAgICAgICAgICA8dGV4dD48IVtDREFUQVsiS2F0ZSBNaWxsZXIiXV0+PC90ZXh0PgogICAgICAgIDwvb3V0cHV0RW50cnk+CiAgICAgIDwvcnVsZT4KICAgICAgPHJ1bGU+CiAgICAgICAgPGlucHV0RW50cnkgaWQ9ImlucHV0RW50cnlfNTAxNjlmZTgtOTkzOC00MzYxLTgzY2MtYzAyNjQyMWQ5MTk0XzciPgogICAgICAgICAgPHRleHQ+PCFbQ0RBVEFbPT0gIkluc3VyYW5jZSJdXT48L3RleHQ+CiAgICAgICAgPC9pbnB1dEVudHJ5PgogICAgICAgIDxpbnB1dEVudHJ5IGlkPSJpbnB1dEVudHJ5XzVjMjVhZDQ0LWE1M2MtNDdkYy1iMDA5LTNlZGFmYTZhZGE3YV83Ij4KICAgICAgICAgIDx0ZXh0PjwhW0NEQVRBWz4gMjUwMDBdXT48L3RleHQ+CiAgICAgICAgPC9pbnB1dEVudHJ5PgogICAgICAgIDxvdXRwdXRFbnRyeSBpZD0ib3V0cHV0RW50cnlfYzNiYzIxZmItOTIyNC00ZTY3LWFiM2QtYTJmNGVhNTc1ZGEyXzciPgogICAgICAgICAgPHRleHQ+PCFbQ0RBVEFbIkpvaG4gRG9lIl1dPjwvdGV4dD4KICAgICAgICA8L291dHB1dEVudHJ5PgogICAgICA8L3J1bGU+CiAgICA8L2RlY2lzaW9uVGFibGU+CiAgPC9kZWNpc2lvbj4KICA8ZG1uZGk6RE1OREk+PC9kbW5kaTpETU5EST4KPC9kZWZpbml0aW9ucz4=\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{decision_url}}/v1/runtime/decision-models",
							"host": [
								"{{decision_url}}"
							],
							"path": [
								"v1",
								"runtime",
								"decision-models"
							]
						}
					},
					"response": []
				},
				{
					"name": "deploy a rule order policy decision model",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=JSON.parse(responseBody);\r",
									"pm.environment.set(\"ruleOrder_modelKey\", jsonData.key);\r",
									"pm.environment.set(\"modelId\",jsonData.id);\r",
									"\r",
									"pm.test(\"Status code is \" + pm.response.code +\" and decisionKey is \"+ jsonData.key, function () {\r",
									"\r",
									"  pm.response.to.have.status(201);\r",
									"\r",
									"  pm.expect(jsonData.key).to.eql(pm.variables.get(\"model-key\"));\r",
									"  });\r",
									"\r",
									" pm.test(\"Status code is \" + pm.response.status,function(){\r",
									"  pm.response.to.have.status(\"Created\")\r",
									"  });\r",
									"\r",
									"  pm.test(\"Model name is \"+ jsonData.name,function(){\r",
									"      pm.expect(jsonData.name).to.eql(pm.variables.get(\"ruleorder-model-name\"));\r",
									"  });\r",
									"\r",
									"  pm.test(\"deploymentSpace is \"+ jsonData.deploymentSpace,function(){\r",
									"      pm.expect(jsonData.deploymentSpace).to.eql(pm.variables.get(\"deploymentSpace\"));\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"modelType\": \"xml\",\n    \"modelContent\":\"PGRlZmluaXRpb25zIHhtbG5zPSJodHRwczovL3d3dy5vbWcub3JnL3NwZWMvRE1OLzIwMTkxMTExL01PREVMLyIgeG1sbnM6ZG1uZGk9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvc3BlYy9ETU4vMjAxOTExMTEvRE1OREkvIiB4bWxuczpkYz0iaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvRE1OLzIwMTgwNTIxL0RDLyIgeG1sbnM6ZGk9Imh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RNTi8yMDE4MDUyMS9ESS8iIGlkPSJkZWZpbml0aW9uXyIgbmFtZT0iRHluYW1pY2NvbnRyYWN0YXBwcm92YWwtcnVsZW9yZGVyIiBuYW1lc3BhY2U9InRhcmdldG5hbWVzcGFjZSIgZXhwb3J0ZXI9IkZsb3dhYmxlIE9wZW4gU291cmNlIE1vZGVsZXIiIGV4cG9ydGVyVmVyc2lvbj0iNi43LjIiPgogIDxkZWNpc2lvbiBpZD0iQ29udHJhY3RfYXBwcm92YWwiIG5hbWU9IkR5bmFtaWNjb250cmFjdGFwcHJvdmFsLXJ1bGVvcmRlciIgeG1sbnM6ZG09Imh0dHBzOi8vZGVjaXNpb25tb2RlbC5vcGVudGV4dC5jb20iIGRtOmNhdGVnb3J5PSJDYXRlZ29yeTEiIGRtOm5hbWVzcGFjZT0idGFyZ2V0bmFtZXNwYWNlIj4KICAgIDxkZWNpc2lvblRhYmxlIGlkPSJkZWNpc2lvblRhYmxlXzc1Y2FjNDVhLTY5ODctNDY4ZS05M2IxLTBhMzI1M2E1MzNjMSIgaGl0UG9saWN5PSJSVUxFIE9SREVSIj4KICAgICAgPGlucHV0IGxhYmVsPSJDb250cmFjdCBDYXRlZ29yeSI+CiAgICAgICAgPGlucHV0RXhwcmVzc2lvbiBpZD0iaW5wdXRFeHByZXNzaW9uXzFjOTc0OTAwLTA0MGUtNGJlYS1iNGI0LTVhZjFjMTkwNjhkYSIgdHlwZVJlZj0ic3RyaW5nIj4KICAgICAgICAgIDx0ZXh0PkNvbnRyYWN0X0NhdGVnb3J5PC90ZXh0PgogICAgICAgIDwvaW5wdXRFeHByZXNzaW9uPgogICAgICA8L2lucHV0PgogICAgICA8aW5wdXQgbGFiZWw9IkNvbnRyYWN0IFZhbHVlIj4KICAgICAgICA8aW5wdXRFeHByZXNzaW9uIGlkPSJpbnB1dEV4cHJlc3Npb25fNDliMTI4MTgtZjQ4My00ZDM4LTkwZTctZWIyMzI0Y2I4YTcwIiB0eXBlUmVmPSJudW1iZXIiPgogICAgICAgICAgPHRleHQ+Q29udHJhY3RfVmFsdWU8L3RleHQ+CiAgICAgICAgPC9pbnB1dEV4cHJlc3Npb24+CiAgICAgIDwvaW5wdXQ+CiAgICAgIDxvdXRwdXQgaWQ9Im91dHB1dEV4cHJlc3Npb25fZmM2OWJiN2EtZmYwZC00MWZlLTlmMWMtOTY3YTM3NTRkZjIwIiBsYWJlbD0iQ29udHJhY3QgQXBwcm92ZXIiIG5hbWU9IkNvbnRyYWN0X0FwcHJvdmVyIiB0eXBlUmVmPSJzdHJpbmciPjwvb3V0cHV0PgogICAgICA8cnVsZT4KICAgICAgICA8aW5wdXRFbnRyeSBpZD0iaW5wdXRFbnRyeV8xYzk3NDkwMC0wNDBlLTRiZWEtYjRiNC01YWYxYzE5MDY4ZGFfMSI+CiAgICAgICAgICA8dGV4dD48IVtDREFUQVs9PSAiQWNhZGVteSJdXT48L3RleHQ+CiAgICAgICAgPC9pbnB1dEVudHJ5PgogICAgICAgIDxpbnB1dEVudHJ5IGlkPSJpbnB1dEVudHJ5XzQ5YjEyODE4LWY0ODMtNGQzOC05MGU3LWViMjMyNGNiOGE3MF8xIj4KICAgICAgICAgIDx0ZXh0PjwhW0NEQVRBWz49IDI1MDAwXV0+PC90ZXh0PgogICAgICAgIDwvaW5wdXRFbnRyeT4KICAgICAgICA8b3V0cHV0RW50cnkgaWQ9Im91dHB1dEVudHJ5X2ZjNjliYjdhLWZmMGQtNDFmZS05ZjFjLTk2N2EzNzU0ZGYyMF8xIj4KICAgICAgICAgIDx0ZXh0PjwhW0NEQVRBWyJKb2huIERvZSJdXT48L3RleHQ+CiAgICAgICAgPC9vdXRwdXRFbnRyeT4KICAgICAgPC9ydWxlPgogICAgICA8cnVsZT4KICAgICAgICA8aW5wdXRFbnRyeSBpZD0iaW5wdXRFbnRyeV8xYzk3NDkwMC0wNDBlLTRiZWEtYjRiNC01YWYxYzE5MDY4ZGFfMiI+CiAgICAgICAgICA8dGV4dD48IVtDREFUQVs9PSAiQWNhZGVteSJdXT48L3RleHQ+CiAgICAgICAgPC9pbnB1dEVudHJ5PgogICAgICAgIDxpbnB1dEVudHJ5IGlkPSJpbnB1dEVudHJ5XzQ5YjEyODE4LWY0ODMtNGQzOC05MGU3LWViMjMyNGNiOGE3MF8yIj4KICAgICAgICAgIDx0ZXh0PjwhW0NEQVRBWz09IDEwMDAwXV0+PC90ZXh0PgogICAgICAgIDwvaW5wdXRFbnRyeT4KICAgICAgICA8b3V0cHV0RW50cnkgaWQ9Im91dHB1dEVudHJ5X2ZjNjliYjdhLWZmMGQtNDFmZS05ZjFjLTk2N2EzNzU0ZGYyMF8yIj4KICAgICAgICAgIDx0ZXh0PjwhW0NEQVRBWyJLcmlzdGVuIEZpc2hlciJdXT48L3RleHQ+CiAgICAgICAgPC9vdXRwdXRFbnRyeT4KICAgICAgPC9ydWxlPgogICAgICA8cnVsZT4KICAgICAgICA8aW5wdXRFbnRyeSBpZD0iaW5wdXRFbnRyeV8xYzk3NDkwMC0wNDBlLTRiZWEtYjRiNC01YWYxYzE5MDY4ZGFfMyI+CiAgICAgICAgICA8dGV4dD48IVtDREFUQVs9PSAiSGVhbHRoIl1dPjwvdGV4dD4KICAgICAgICA8L2lucHV0RW50cnk+CiAgICAgICAgPGlucHV0RW50cnkgaWQ9ImlucHV0RW50cnlfNDliMTI4MTgtZjQ4My00ZDM4LTkwZTctZWIyMzI0Y2I4YTcwXzMiPgogICAgICAgICAgPHRleHQ+PCFbQ0RBVEFbPCAxMDAwMF1dPjwvdGV4dD4KICAgICAgICA8L2lucHV0RW50cnk+CiAgICAgICAgPG91dHB1dEVudHJ5IGlkPSJvdXRwdXRFbnRyeV9mYzY5YmI3YS1mZjBkLTQxZmUtOWYxYy05NjdhMzc1NGRmMjBfMyI+CiAgICAgICAgICA8dGV4dD48IVtDREFUQVsiS2F0ZSBNaWxsZXIiXV0+PC90ZXh0PgogICAgICAgIDwvb3V0cHV0RW50cnk+CiAgICAgIDwvcnVsZT4KICAgICAgPHJ1bGU+CiAgICAgICAgPGlucHV0RW50cnkgaWQ9ImlucHV0RW50cnlfMWM5NzQ5MDAtMDQwZS00YmVhLWI0YjQtNWFmMWMxOTA2OGRhXzQiPgogICAgICAgICAgPHRleHQ+PCFbQ0RBVEFbPT0gIkhlYWx0aCJdXT48L3RleHQ+CiAgICAgICAgPC9pbnB1dEVudHJ5PgogICAgICAgIDxpbnB1dEVudHJ5IGlkPSJpbnB1dEVudHJ5XzQ5YjEyODE4LWY0ODMtNGQzOC05MGU3LWViMjMyNGNiOGE3MF80Ij4KICAgICAgICAgIDx0ZXh0PjwhW0NEQVRBWzw9IDE1MDAwXV0+PC90ZXh0PgogICAgICAgIDwvaW5wdXRFbnRyeT4KICAgICAgICA8b3V0cHV0RW50cnkgaWQ9Im91dHB1dEVudHJ5X2ZjNjliYjdhLWZmMGQtNDFmZS05ZjFjLTk2N2EzNzU0ZGYyMF80Ij4KICAgICAgICAgIDx0ZXh0PjwhW0NEQVRBWyJUb20gUGVyZXosIEtyaXN0ZW4gRmlzaGVyIl1dPjwvdGV4dD4KICAgICAgICA8L291dHB1dEVudHJ5PgogICAgICA8L3J1bGU+CiAgICAgIDxydWxlPgogICAgICAgIDxpbnB1dEVudHJ5IGlkPSJpbnB1dEVudHJ5XzFjOTc0OTAwLTA0MGUtNGJlYS1iNGI0LTVhZjFjMTkwNjhkYV81Ij4KICAgICAgICAgIDx0ZXh0PjwhW0NEQVRBWz09ICJIZWFsdGgiXV0+PC90ZXh0PgogICAgICAgIDwvaW5wdXRFbnRyeT4KICAgICAgICA8aW5wdXRFbnRyeSBpZD0iaW5wdXRFbnRyeV80OWIxMjgxOC1mNDgzLTRkMzgtOTBlNy1lYjIzMjRjYjhhNzBfNSI+CiAgICAgICAgICA8dGV4dD48IVtDREFUQVs+PSAyNTAwMF1dPjwvdGV4dD4KICAgICAgICA8L2lucHV0RW50cnk+CiAgICAgICAgPG91dHB1dEVudHJ5IGlkPSJvdXRwdXRFbnRyeV9mYzY5YmI3YS1mZjBkLTQxZmUtOWYxYy05NjdhMzc1NGRmMjBfNSI+CiAgICAgICAgICA8dGV4dD48IVtDREFUQVsiRmluYW5jZSBUZWFtIl1dPjwvdGV4dD4KICAgICAgICA8L291dHB1dEVudHJ5PgogICAgICA8L3J1bGU+CiAgICAgIDxydWxlPgogICAgICAgIDxpbnB1dEVudHJ5IGlkPSJpbnB1dEVudHJ5XzFjOTc0OTAwLTA0MGUtNGJlYS1iNGI0LTVhZjFjMTkwNjhkYV82Ij4KICAgICAgICAgIDx0ZXh0PjwhW0NEQVRBWz09ICJJbnN1cmFuY2UiXV0+PC90ZXh0PgogICAgICAgIDwvaW5wdXRFbnRyeT4KICAgICAgICA8aW5wdXRFbnRyeSBpZD0iaW5wdXRFbnRyeV80OWIxMjgxOC1mNDgzLTRkMzgtOTBlNy1lYjIzMjRjYjhhNzBfNiI+CiAgICAgICAgICA8dGV4dD48IVtDREFUQVs+IDEwMDAwXV0+PC90ZXh0PgogICAgICAgIDwvaW5wdXRFbnRyeT4KICAgICAgICA8b3V0cHV0RW50cnkgaWQ9Im91dHB1dEVudHJ5X2ZjNjliYjdhLWZmMGQtNDFmZS05ZjFjLTk2N2EzNzU0ZGYyMF82Ij4KICAgICAgICAgIDx0ZXh0PjwhW0NEQVRBWyJLYXRlIE1pbGxlciJdXT48L3RleHQ+CiAgICAgICAgPC9vdXRwdXRFbnRyeT4KICAgICAgPC9ydWxlPgogICAgICA8cnVsZT4KICAgICAgICA8aW5wdXRFbnRyeSBpZD0iaW5wdXRFbnRyeV8xYzk3NDkwMC0wNDBlLTRiZWEtYjRiNC01YWYxYzE5MDY4ZGFfNyI+CiAgICAgICAgICA8dGV4dD48IVtDREFUQVs9PSAiSW5zdXJhbmNlIl1dPjwvdGV4dD4KICAgICAgICA8L2lucHV0RW50cnk+CiAgICAgICAgPGlucHV0RW50cnkgaWQ9ImlucHV0RW50cnlfNDliMTI4MTgtZjQ4My00ZDM4LTkwZTctZWIyMzI0Y2I4YTcwXzciPgogICAgICAgICAgPHRleHQ+PCFbQ0RBVEFbPiAyNTAwMF1dPjwvdGV4dD4KICAgICAgICA8L2lucHV0RW50cnk+CiAgICAgICAgPG91dHB1dEVudHJ5IGlkPSJvdXRwdXRFbnRyeV9mYzY5YmI3YS1mZjBkLTQxZmUtOWYxYy05NjdhMzc1NGRmMjBfNyI+CiAgICAgICAgICA8dGV4dD48IVtDREFUQVsiSm9obiBEb2UiXV0+PC90ZXh0PgogICAgICAgIDwvb3V0cHV0RW50cnk+CiAgICAgIDwvcnVsZT4KICAgIDwvZGVjaXNpb25UYWJsZT4KICA8L2RlY2lzaW9uPgogIDxkbW5kaTpETU5EST48L2RtbmRpOkRNTkRJPgo8L2RlZmluaXRpb25zPg==\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{decision_url}}/v1/runtime/decision-models",
							"host": [
								"{{decision_url}}"
							],
							"path": [
								"v1",
								"runtime",
								"decision-models"
							]
						}
					},
					"response": []
				},
				{
					"name": "deploy a first hit policy decision model with JSON",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=JSON.parse(responseBody);\r",
									"pm.environment.set(\"decisionKey\", jsonData.key);\r",
									"pm.environment.set(\"modelId\",jsonData.id);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is \" + pm.response.code +\" and decisionKey is \"+ jsonData.key, function () {\r",
									"\r",
									"  pm.response.to.have.status(201);\r",
									"\r",
									"  pm.expect(jsonData.key).to.eql(pm.variables.get(\"model-key\"));\r",
									"  });\r",
									"\r",
									" pm.test(\"Status code is \" + pm.response.status,function(){\r",
									"  pm.response.to.have.status(\"Created\")\r",
									"  });\r",
									"\r",
									"  pm.test(\"name is \"+ jsonData.name,function(){\r",
									"      pm.expect(jsonData.name).to.eql(pm.variables.get(\"model-name\"));\r",
									"  });\r",
									"\r",
									"  pm.test(\"deploymentSpace is \"+ jsonData.deploymentSpace,function(){\r",
									"      pm.expect(jsonData.deploymentSpace).to.eql(pm.variables.get(\"deploymentSpace\"));\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"modelType\": \"json\",\n    \"modelContent\": {\n        \"id\": \"definition_\",\n        \"version\": \"3\",\n        \"name\": \"Dynamiccontractapproval-firsthit\",\n        \"key\": \"Contract_approval\",\n        \"category\": \"Category1\",\n        \"description\": null,\n        \"namespace\": \"targetnamespace1\",\n        \"hitIndicator\": \"FIRST\",\n        \"inputExpressions\": [\n            {\n                \"id\": \"inputExpression_50169fe8-9938-4361-83cc-c026421d9194\",\n                \"type\": \"string\",\n                \"variableId\": \"Contract_Category\",\n                \"label\": \"Contract Category\"\n            },\n            {\n                \"id\": \"inputExpression_5c25ad44-a53c-47dc-b009-3edafa6ada7a\",\n                \"type\": \"number\",\n                \"variableId\": \"Contract_Value\",\n                \"label\": \"Contract Value\"\n            }\n        ],\n        \"outputExpressions\": [\n            {\n                \"id\": \"outputExpression_c3bc21fb-9224-4e67-ab3d-a2f4ea575da2\",\n                \"type\": \"string\",\n                \"variableId\": \"Contract_Approver\",\n                \"label\": \"Contract Approver\"\n            }\n        ],\n        \"rules\": [\n            {\n                \"inputExpression_50169fe8-9938-4361-83cc-c026421d9194_operator\": \"==\",\n                \"inputExpression_50169fe8-9938-4361-83cc-c026421d9194_expression\": \"Academy\",\n                \"inputExpression_5c25ad44-a53c-47dc-b009-3edafa6ada7a_operator\": \">=\",\n                \"inputExpression_5c25ad44-a53c-47dc-b009-3edafa6ada7a_expression\": \"25000\",\n                \"outputExpression_c3bc21fb-9224-4e67-ab3d-a2f4ea575da2\": \"John Doe\"\n            },\n            {\n                \"inputExpression_50169fe8-9938-4361-83cc-c026421d9194_operator\": \"==\",\n                \"inputExpression_50169fe8-9938-4361-83cc-c026421d9194_expression\": \"Academy\",\n                \"inputExpression_5c25ad44-a53c-47dc-b009-3edafa6ada7a_operator\": \"==\",\n                \"inputExpression_5c25ad44-a53c-47dc-b009-3edafa6ada7a_expression\": \"10000\",\n                \"outputExpression_c3bc21fb-9224-4e67-ab3d-a2f4ea575da2\": \"Kristen Fisher\"\n            },\n            {\n                \"inputExpression_50169fe8-9938-4361-83cc-c026421d9194_operator\": \"==\",\n                \"inputExpression_50169fe8-9938-4361-83cc-c026421d9194_expression\": \"Health\",\n                \"inputExpression_5c25ad44-a53c-47dc-b009-3edafa6ada7a_operator\": \"<\",\n                \"inputExpression_5c25ad44-a53c-47dc-b009-3edafa6ada7a_expression\": \"10000\",\n                \"outputExpression_c3bc21fb-9224-4e67-ab3d-a2f4ea575da2\": \"Kate Miller\"\n            },\n            {\n                \"inputExpression_50169fe8-9938-4361-83cc-c026421d9194_operator\": \"==\",\n                \"inputExpression_50169fe8-9938-4361-83cc-c026421d9194_expression\": \"Health\",\n                \"inputExpression_5c25ad44-a53c-47dc-b009-3edafa6ada7a_operator\": \"<=\",\n                \"inputExpression_5c25ad44-a53c-47dc-b009-3edafa6ada7a_expression\": \"15000\",\n                \"outputExpression_c3bc21fb-9224-4e67-ab3d-a2f4ea575da2\": \"Tom Perez, Kristen Fisher\"\n            },\n            {\n                \"inputExpression_50169fe8-9938-4361-83cc-c026421d9194_operator\": \"==\",\n                \"inputExpression_50169fe8-9938-4361-83cc-c026421d9194_expression\": \"Health\",\n                \"inputExpression_5c25ad44-a53c-47dc-b009-3edafa6ada7a_operator\": \">=\",\n                \"inputExpression_5c25ad44-a53c-47dc-b009-3edafa6ada7a_expression\": \"25000\",\n                \"outputExpression_c3bc21fb-9224-4e67-ab3d-a2f4ea575da2\": \"Finance Team\"\n            },\n            {\n                \"inputExpression_50169fe8-9938-4361-83cc-c026421d9194_operator\": \"==\",\n                \"inputExpression_50169fe8-9938-4361-83cc-c026421d9194_expression\": \"Insurance\",\n                \"inputExpression_5c25ad44-a53c-47dc-b009-3edafa6ada7a_operator\": \">\",\n                \"inputExpression_5c25ad44-a53c-47dc-b009-3edafa6ada7a_expression\": \"10000\",\n                \"outputExpression_c3bc21fb-9224-4e67-ab3d-a2f4ea575da2\": \"Kate Miller\"\n            },\n            {\n                \"inputExpression_50169fe8-9938-4361-83cc-c026421d9194_operator\": \"==\",\n                \"inputExpression_50169fe8-9938-4361-83cc-c026421d9194_expression\": \"Insurance\",\n                \"inputExpression_5c25ad44-a53c-47dc-b009-3edafa6ada7a_operator\": \">\",\n                \"inputExpression_5c25ad44-a53c-47dc-b009-3edafa6ada7a_expression\": \"25000\",\n                \"outputExpression_c3bc21fb-9224-4e67-ab3d-a2f4ea575da2\": \"John Doe\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{decision_url}}/v1/runtime/decision-models",
							"host": [
								"{{decision_url}}"
							],
							"path": [
								"v1",
								"runtime",
								"decision-models"
							]
						}
					},
					"response": []
				},
				{
					"name": "get list of deployed decision models",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=JSON.parse(responseBody);\r",
									"pm.test(\"Status code is \" + pm.response.code,function(){\r",
									"  pm.response.to.have.status(200)\r",
									"  });\r",
									"\r",
									"  pm.test(\"Status code is \" + pm.response.status,function(){\r",
									"  pm.response.to.have.status(\"OK\")\r",
									"  });\r",
									"\r",
									" const length=jsonData[\"_embedded\"][\"decision-models\"].length;\r",
									" \r",
									"\r",
									"for(var i=0 ; i<length ; i++){\r",
									"    if(jsonData[\"_embedded\"][\"decision-models\"][i].name!=\"\"){\r",
									" pm.test(\"Deployed model name is \"+jsonData[\"_embedded\"][\"decision-models\"][i].name);\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{decision_url}}/v1/runtime/decision-models?latest=true",
							"host": [
								"{{decision_url}}"
							],
							"path": [
								"v1",
								"runtime",
								"decision-models"
							],
							"query": [
								{
									"key": "key",
									"value": "DynamicContractAssignments",
									"disabled": true
								},
								{
									"key": "latest",
									"value": "true"
								},
								{
									"key": "sort",
									"value": "version",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "0",
									"disabled": true
								},
								{
									"key": "count",
									"value": "10",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "convert model content",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Status code is \" + pm.response.code,function(){\r",
									"  pm.response.to.have.status(200)\r",
									"  });\r",
									"  \r",
									"pm.test(\"Status code is \" + pm.response.status,function(){\r",
									"  pm.response.to.have.status(\"OK\")\r",
									"  });\r",
									"\r",
									"pm.test(\"Content type is \"+ jsonData.modelType,function(){\r",
									"      pm.expect( jsonData.modelType).to.eql(\"xml\");\r",
									"  });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"modelType\": \"json\",\r\n    \"modelContent\": {\r\n        \"id\": \"definition_a488407c-1a5f-11eb-91de-4a89e7666665\",\r\n        \"key\": \"quickdecision\",\r\n        \"name\": \"\",\r\n        \"namespace\": \"http://www.flowable.org/dmn\",\r\n        \"version\": \"3\",\r\n        \"description\": null,\r\n        \"hitIndicator\": \"FIRST\",\r\n        \"inputExpressions\": [\r\n            {\r\n                \"id\": \"inputExpression_1\",\r\n                \"type\": \"string\",\r\n                \"label\": \"city\",\r\n                \"variableId\": \"city\"\r\n            }\r\n        ],\r\n        \"outputExpressions\": [\r\n            {\r\n                \"id\": \"outputExpression_2\",\r\n                \"type\": \"string\",\r\n                \"label\": \"living standards\",\r\n                \"variableId\": \"living_standards\"\r\n            }\r\n        ],\r\n        \"rules\": [\r\n            {\r\n                \"inputExpression_1_operator\": \"==\",\r\n                \"inputExpression_1_expression\": \"Hyderabad\",\r\n                \"outputExpression_2\": \"Great\"\r\n            },\r\n            {\r\n                \"inputExpression_1_operator\": \"==\",\r\n                \"inputExpression_1_expression\": \"Bangalore\",\r\n                \"outputExpression_2\": \"Great\"\r\n            },\r\n            {\r\n                \"inputExpression_1_operator\": \"==\",\r\n                \"inputExpression_1_expression\": \"Chennai\",\r\n                \"outputExpression_2\": \"Good\"\r\n            },\r\n            {\r\n                \"inputExpression_1_operator\": \"==\",\r\n                \"inputExpression_1_expression\": \"Vizag\",\r\n                \"outputExpression_2\": \"Great\"\r\n            },\r\n            {\r\n                \"inputExpression_1_operator\": \"==\",\r\n                \"inputExpression_1_expression\": \"Washington\",\r\n                \"outputExpression_2\": \"Average\"\r\n            },\r\n            {\r\n                \"inputExpression_1_operator\": \"==\",\r\n                \"inputExpression_1_expression\": \"Detroit\",\r\n                \"outputExpression_2\": \"Poor\"\r\n            }\r\n        ]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{decision_url}}/v1/decision-models/conversion",
							"host": [
								"{{decision_url}}"
							],
							"path": [
								"v1",
								"decision-models",
								"conversion"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DMN Rule Service",
			"item": [
				{
					"name": "execute a first hit polcy decision",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code,function(){\r",
									"  pm.response.to.have.status(201)\r",
									"  });\r",
									"\r",
									"  pm.test(\"Status code is \" + pm.response.status,function(){\r",
									"  pm.response.to.have.status(\"Created\")\r",
									"  });\r",
									"\r",
									" const response=pm.response.json();\r",
									"\r",
									" pm.test(\"output variable name is \"+ response.resultVariables[0][0].name,function(){\r",
									"      pm.expect(response.resultVariables[0][0].name).to.eql(pm.variables.get(\"rule-name\"));\r",
									"  });\r",
									"\r",
									"   pm.test(\"value is \"+ response.resultVariables[0][0].value,function(){\r",
									"      pm.expect(response.resultVariables[0][0].value).to.eql(pm.variables.get(\"value\"));\r",
									"  });\r",
									"\r",
									"\r",
									" pm.test(\"type is \"+ response.resultVariables[0][0].type,function(){\r",
									"      pm.expect(response.resultVariables[0][0].type).to.eql(pm.variables.get(\"type\"));\r",
									"  });\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"decisionKey\": \"{{firstHit_modelKey}}\",\r\n    \"inputVariables\": [\r\n        {\r\n            \"name\": \"Contract_Category\",\r\n            \"value\": \"Insurance\"\r\n        },\r\n        {\r\n            \"name\": \"Contract_Value\",\r\n            \"value\": \"50000\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{decision_url}}/v1/execute",
							"host": [
								"{{decision_url}}"
							],
							"path": [
								"v1",
								"execute"
							]
						}
					},
					"response": [
						{
							"name": "execute Decision",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"decisionKey\": \"{{decisionKey}}\",\r\n  \"inputVariables\": [\r\n    {\r\n      \"name\": \"city\",\r\n      \"value\": \"Hyderabad\"\r\n    }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{decision_url}}/v1/execute",
									"host": [
										"{{decision_url}}"
									],
									"path": [
										"v1",
										"execute"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 20 Dec 2022 10:09:42 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "leap-request-context",
									"value": "requestId=9eZt08bS8KFfiJLmaMxhEU"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "x-vcap-request-id",
									"value": "1b825d1b-db1e-4ad3-40d3-fdaa1e5caa84"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Content-Disposition, Content-Length"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "origin, x-requested-with, accept, authorization, content-type, x-view-request-id"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3628800"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "HEAD, GET, DELETE, PUT, POST, PATCH, OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "false"
								}
							],
							"cookie": [],
							"body": "{\n    \"resultVariables\": [\n        [\n            {\n                \"name\": \"living_standards\",\n                \"type\": \"string\",\n                \"value\": \"Great\"\n            }\n        ]\n    ]\n}"
						}
					]
				},
				{
					"name": "execute a rule order decision",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code,function(){\r",
									"  pm.response.to.have.status(201)\r",
									"  });\r",
									"\r",
									"  pm.test(\"Status code is \" + pm.response.status,function(){\r",
									"  pm.response.to.have.status(\"Created\")\r",
									"  });\r",
									"\r",
									" const response=pm.response.json();\r",
									"\r",
									" pm.test(\"output variable name is \"+ response.resultVariables[0][0].name,function(){\r",
									"      pm.expect(response.resultVariables[0][0].name).to.eql(pm.variables.get(\"rule-name\"));\r",
									"  });\r",
									"\r",
									"console.log(pm.variables.get(\"type\"));\r",
									"\r",
									"   pm.test(\"value is \"+ response.resultVariables[0][0].value,function(){\r",
									"      pm.expect(response.resultVariables[0][0].value).to.eql(pm.variables.get(\"value\"));\r",
									"  });\r",
									"\r",
									"\r",
									" pm.test(\"type is \"+ response.resultVariables[0][0].type,function(){\r",
									"      pm.expect(response.resultVariables[0][0].type).to.eql(pm.variables.get(\"type\"));\r",
									"  });\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"decisionKey\": \"{{ruleOrder_modelKey}}\",\r\n    \"inputVariables\": [\r\n        {\r\n            \"name\": \"Contract_Category\",\r\n            \"value\": \"Insurance\"\r\n        },\r\n        {\r\n            \"name\": \"Contract_Value\",\r\n            \"value\": \"50000\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{decision_url}}/v1/execute",
							"host": [
								"{{decision_url}}"
							],
							"path": [
								"v1",
								"execute"
							]
						}
					},
					"response": [
						{
							"name": "execute Decision",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"decisionKey\": \"{{decisionKey}}\",\r\n  \"inputVariables\": [\r\n    {\r\n      \"name\": \"city\",\r\n      \"value\": \"Hyderabad\"\r\n    }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{decision_url}}/v1/execute",
									"host": [
										"{{decision_url}}"
									],
									"path": [
										"v1",
										"execute"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 20 Dec 2022 10:09:42 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "leap-request-context",
									"value": "requestId=9eZt08bS8KFfiJLmaMxhEU"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "x-vcap-request-id",
									"value": "1b825d1b-db1e-4ad3-40d3-fdaa1e5caa84"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Content-Disposition, Content-Length"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "origin, x-requested-with, accept, authorization, content-type, x-view-request-id"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3628800"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "HEAD, GET, DELETE, PUT, POST, PATCH, OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "false"
								}
							],
							"cookie": [],
							"body": "{\n    \"resultVariables\": [\n        [\n            {\n                \"name\": \"living_standards\",\n                \"type\": \"string\",\n                \"value\": \"Great\"\n            }\n        ]\n    ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Clean-Up",
			"item": [
				{
					"name": "delete a decision model",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is \" + pm.response.code,function(){\r",
									"  pm.response.to.have.status(204)\r",
									"  });\r",
									"\r",
									"  pm.test(\"Status code is \" + pm.response.status,function(){\r",
									"  pm.response.to.have.status(\"No Content\")\r",
									"  });\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{decision_url}}/v1/runtime/decision-models/{{modelId}}",
							"host": [
								"{{decision_url}}"
							],
							"path": [
								"v1",
								"runtime",
								"decision-models",
								"{{modelId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Historic Decision Executions",
			"item": [
				{
					"name": "get historic decision executions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=JSON.parse(responseBody);\r",
									"pm.test(\"Status code is \" + pm.response.code,function(){\r",
									"  pm.response.to.have.status(200)\r",
									"  });\r",
									"\r",
									"  pm.test(\"Status code is \" + pm.response.status,function(){\r",
									"  pm.response.to.have.status(\"OK\")\r",
									"  });\r",
									"\r",
									" const length=jsonData[\"_embedded\"][\"historic-decision-executions\"].length;\r",
									"\r",
									"for(var i=0 ; i<length ; i++){\r",
									"    if(jsonData[\"_embedded\"][\"historic-decision-executions\"][i].decisionKey!=\"\"){\r",
									" pm.test(\"Deployed model name is \"+jsonData[\"_embedded\"][\"historic-decision-executions\"][i].decisionKey);\r",
									"    }\r",
									"   \r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{decision_url}}/v1/historic-decision-executions",
							"host": [
								"{{decision_url}}"
							],
							"path": [
								"v1",
								"historic-decision-executions"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Version",
			"item": [
				{
					"name": "get Version",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{decision_url}}/v1/version",
							"host": [
								"{{decision_url}}"
							],
							"path": [
								"v1",
								"version"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{tenant_access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
